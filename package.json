{
  "name": "token_wizard",
  "version": "1.0.0",
  "private": true,
  "engines": {
    "node": "8.9.0"
  },
  "devDependencies": {
    "coveralls": "^3.0.0",
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-15": "^1.0.5",
    "enzyme-to-json": "^3.3.1",
    "ethereumjs-testrpc": "^4.1.3",
    "ganache-cli": "^6.1.0-beta.0",
    "gulp": "^3.9.1",
    "gulp-add-src": "^0.2.0",
    "gulp-autoprefixer": "^3.1.1",
    "gulp-babel": "^7.0.0",
    "gulp-concat": "^2.6.1",
    "gulp-include": "^2.3.1",
    "gulp-order": "^1.1.1",
    "gulp-postcss": "^6.2.0",
    "gulp-sass": "^2.3.2",
    "gulp-sass-glob": "^1.0.6",
    "gulp-uglify": "^2.0.0",
    "gulp-uglifycss": "^1.0.6",
    "gulp-util": "^3.0.8",
    "markdown-toc": "^1.2.0",
    "mobx-react-devtools": "^4.2.15",
    "mockdate": "^2.0.2",
    "react-test-renderer": "^15.6.2",
    "shelljs": "^0.7.8",
    "truffle": "^3.4.9",
    "yargs": "^10.0.3"
  },
  "dependencies": {
    "airbnb-js-shims": "^1.4.1",
    "autoprefixer": "7.1.1",
    "babel-core": "6.25.0",
    "babel-eslint": "7.2.3",
    "babel-jest": "20.0.3",
    "babel-loader": "7.0.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react-app": "^3.0.1",
    "babel-preset-stage-1": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "babel-runtime": "6.23.0",
    "bignumber.js": "^6.0.0",
    "case-sensitive-paths-webpack-plugin": "2.1.1",
    "chalk": "1.1.3",
    "classnames": "^2.2.5",
    "clipboard": "^1.7.1",
    "css-loader": "0.28.4",
    "dotenv": "4.0.0",
    "eslint": "3.19.0",
    "eslint-config-react-app": "^1.0.5",
    "eslint-loader": "1.7.1",
    "eslint-plugin-dependencies": "^2.4.0",
    "eslint-plugin-flowtype": "2.34.0",
    "eslint-plugin-import": "2.2.0",
    "eslint-plugin-jsx-a11y": "5.0.3",
    "eslint-plugin-react": "7.1.0",
    "extract-text-webpack-plugin": "2.1.2",
    "file-loader": "0.11.2",
    "font-awesome": "^4.7.0",
    "fs-extra": "3.0.1",
    "html-webpack-plugin": "2.29.0",
    "immutability-helper": "^2.5.0",
    "jest": "20.0.4",
    "jquery": "^3.2.1",
    "jszip": "^3.1.4",
    "mobx": "^3.3.0",
    "mobx-react": "^4.3.3",
    "moment": "^2.20.1",
    "object-assign": "4.1.1",
    "papaparse": "^4.3.7",
    "path": "^0.12.7",
    "postcss-flexbugs-fixes": "3.0.0",
    "postcss-loader": "2.0.6",
    "promise": "7.1.1",
    "qrcode.react": "^0.7.2",
    "query-string": "^5.0.1",
    "react": "^15.6.1",
    "react-alert": "^2.4.0",
    "react-copy-to-clipboard": "^5.0.1",
    "react-countdown-clock": "^2.0.0",
    "react-dev-utils": "^3.0.2",
    "react-dom": "^15.6.1",
    "react-dropzone": "^4.2.8",
    "react-error-overlay": "^1.0.9",
    "react-router-dom": "^4.1.2",
    "solc": "^0.4.14",
    "solidity-flattener": "file:submodules/solidity-flattener",
    "store2": "^2.6.0",
    "style-loader": "0.18.2",
    "sw-precache-webpack-plugin": "0.11.3",
    "sweetalert2": "^7.0.9",
    "url-loader": "0.5.9",
    "webpack": "^2.6.1",
    "webpack-dev-server": "2.5.0",
    "webpack-manifest-plugin": "1.1.0",
    "whatwg-fetch": "2.0.3"
  },
  "config": {
    "contract_folder": "./public/contracts",
    "combine_solidity_script": "submodules/solidity-flattener/index.js",
    "extension_path": "./scripts/POAExtendedCrowdSale.sol",
    "zeppelin_path": "node_modules/zeppelin-solidity/contracts/crowdsale/",
    "tokenmarketnet_path": "submodules/poa-token-market-net-ico/contracts/",
    "null_finalize_agent_contract_name": "NullFinalizeAgentExt",
    "finalize_agent_contract_name": "ReservedTokensFinalizeAgent",
    "crowdsale_contract_name": "MintedTokenCappedCrowdsaleExt",
    "crowdsale_token_contract_name": "CrowdsaleTokenExt",
    "crowdsale_pricing_strategy_contract_name": "FlatPricingExt",
    "safe_math_lib_contract_name": "SafeMathLibExt",
    "registry_contract_name": "Registry"
  },
  "scripts": {
    "installWeb3": "cd submodules/poa-web3-1.0 && npm install && cd ../../ && npm install --no-save submodules/poa-web3-1.0/packages/web3",
    "start": "npm run installWeb3 && npm run generateContracts && npm run compileContracts && node scripts/start.js",
    "dev": "npm run installWeb3 && npm run generateFlatSolidityRegistryContract && npm run compileRegistryContract && npm run deployRegistry && npm start",
    "dev:fast": "npm run installWeb3 && npm run generateFlatSolidityRegistryContract && npm run compileRegistryContract && npm run deployRegistry && node scripts/start.js",
    "deployRegistry": "node scripts/deployRegistry.js",
    "startWin": "npm run installWeb3 && npm run generateFlatSoliditySafeMathLibContractWin && npm run generateFlatSolidityCrowdsaleNullFinalizeAgentContractWin && npm run generateFlatSolidityCrowdsaleFinalizeAgentContractWin && npm run generateFlatSolidityCrowdsaleContractWin && npm run generateFlatSolidityCrowdsaleTokenContractWin && npm run generateFlatSolidityCrowdsalePricingStrategyContractWin && npm run compileSafeMathLibExtContractWin && npm run compileCrowdsaleNullFinalizeAgentContractWin && npm run compileCrowdsaleFinalizeAgentContractWin && npm run compileCrowdsaleContractWin && npm run compileCrowdsaleTokenContractWin && npm run compileCrowdsalePricingStrategyContractWin && node scripts/start.js",
    "build": "git submodule update --init --recursive --remote && cd submodules/solidity-flattener && npm install && cd ../../ && npm install && cd submodules/poa-web3-1.0 && npm install && cd ../../ && npm install --no-save submodules/poa-web3-1.0/packages/web3 && npm run generateContracts && npm run compileContracts && node scripts/build.js && cp ./build/index.html ./build/invest.html && cp ./build/index.html ./build/crowdsale.html && cp ./build/index.html ./build/manage.html",
    "test": "npm run test:e2e && bash ./start_testrpc.sh && cd ./submodules/poa-token-market-net-ico/ && npm install && node_modules/.bin/truffle migrate --network testrpc && node_modules/.bin/truffle test --network testrpc",
    "test:dapp": "jest --env=jsdom",
    "test:e2e": "cd submodules/token-wizard-test-automation && npm i && npm run test1",
    "coveralls": "jest --env=jsdom --coverage && cat coverage/lcov.info | coveralls",
    "generateContracts": "npm run generateFlatSoliditySafeMathLibContract && npm run generateFlatSolidityCrowdsaleNullFinalizeAgentContract && npm run generateFlatSolidityCrowdsaleFinalizeAgentContract && npm run generateFlatSolidityCrowdsaleContract && npm run generateFlatSolidityCrowdsaleTokenContract && npm run generateFlatSolidityCrowdsalePricingStrategyContract && npm run generateFlatSolidityRegistryContract",
    "generateFlatSoliditySafeMathLibContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_safe_math_lib_contract_name.sol $npm_package_config_contract_folder SafeMathLibExt",
    "generateFlatSolidityCrowdsaleContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_crowdsale_contract_name.sol $npm_package_config_contract_folder CrowdsaleWhiteListWithCap",
    "generateFlatSolidityCrowdsaleTokenContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_crowdsale_token_contract_name.sol $npm_package_config_contract_folder CrowdsaleWhiteListWithCapToken",
    "generateFlatSolidityCrowdsalePricingStrategyContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_crowdsale_pricing_strategy_contract_name.sol $npm_package_config_contract_folder CrowdsaleWhiteListWithCapPricingStrategy",
    "generateFlatSolidityCrowdsaleNullFinalizeAgentContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_null_finalize_agent_contract_name.sol $npm_package_config_contract_folder NullFinalizeAgent",
    "generateFlatSolidityCrowdsaleFinalizeAgentContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_finalize_agent_contract_name.sol $npm_package_config_contract_folder FinalizeAgent",
    "generateFlatSolidityRegistryContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_registry_contract_name.sol $npm_package_config_contract_folder Registry",
    "compileContracts": "npm run compileSafeMathLibExtContract && npm run compileCrowdsaleNullFinalizeAgentContract && npm run compileCrowdsaleFinalizeAgentContract && npm run compileCrowdsaleContract && npm run compileCrowdsaleTokenContract && npm run compileCrowdsalePricingStrategyContract && npm run compileRegistryContract",
    "compileSafeMathLibExtContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/SafeMathLibExt_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_safe_math_lib_contract_name SafeMathLibExt",
    "compileCrowdsaleContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/CrowdsaleWhiteListWithCap_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_crowdsale_contract_name CrowdsaleWhiteListWithCap",
    "compileCrowdsaleTokenContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/CrowdsaleWhiteListWithCapToken_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_crowdsale_token_contract_name CrowdsaleWhiteListWithCapToken",
    "compileCrowdsalePricingStrategyContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/CrowdsaleWhiteListWithCapPricingStrategy_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_crowdsale_pricing_strategy_contract_name CrowdsaleWhiteListWithCapPricingStrategy",
    "compileCrowdsaleNullFinalizeAgentContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/NullFinalizeAgent_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_null_finalize_agent_contract_name NullFinalizeAgent",
    "compileRegistryContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/Registry_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_registry_contract_name Registry",
    "compileCrowdsaleFinalizeAgentContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/FinalizeAgent_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_finalize_agent_contract_name FinalizeAgent",
    "generateFlatSoliditySafeMathLibContractWin": "node %npm_package_config_combine_solidity_script% %npm_package_config_tokenmarketnet_path%/%npm_package_config_safe_math_lib_contract_name%.sol %npm_package_config_contract_folder% SafeMathLibExt",
    "generateFlatSolidityCrowdsaleContractWin": "node %npm_package_config_combine_solidity_script% %npm_package_config_tokenmarketnet_path%/%npm_package_config_crowdsale_contract_name%.sol %npm_package_config_contract_folder% CrowdsaleWhiteListWithCap",
    "generateFlatSolidityCrowdsaleTokenContractWin": "node %npm_package_config_combine_solidity_script% %npm_package_config_tokenmarketnet_path%/%npm_package_config_crowdsale_token_contract_name%.sol %npm_package_config_contract_folder% CrowdsaleWhiteListWithCapToken",
    "generateFlatSolidityCrowdsalePricingStrategyContractWin": "node %npm_package_config_combine_solidity_script% %npm_package_config_tokenmarketnet_path%/%npm_package_config_crowdsale_pricing_strategy_contract_name%.sol %npm_package_config_contract_folder% CrowdsaleWhiteListWithCapPricingStrategy",
    "generateFlatSolidityCrowdsaleNullFinalizeAgentContractWin": "node %npm_package_config_combine_solidity_script% %npm_package_config_tokenmarketnet_path%/%npm_package_config_null_finalize_agent_contract_name%.sol %npm_package_config_contract_folder% NullFinalizeAgent",
    "generateFlatSolidityCrowdsaleFinalizeAgentContractWin": "node %npm_package_config_combine_solidity_script% %npm_package_config_tokenmarketnet_path%/%npm_package_config_finalize_agent_contract_name%.sol %npm_package_config_contract_folder% FinalizeAgent",
    "compileSafeMathLibExtContractWin": "node ./scripts/compileContract.js %npm_package_config_contract_folder%/SafeMathLibExt_flat.sol %npm_package_config_contract_folder% $npm_package_config_extension_path false %npm_package_config_safe_math_lib_contract_name% SafeMathLibExt",
    "compileCrowdsaleContractWin": "node ./scripts/compileContract.js %npm_package_config_contract_folder%/CrowdsaleWhiteListWithCap_flat.sol %npm_package_config_contract_folder% %npm_package_config_extension_path% false %npm_package_config_crowdsale_contract_name% CrowdsaleWhiteListWithCap",
    "compileCrowdsaleTokenContractWin": "node ./scripts/compileContract.js %npm_package_config_contract_folder%/CrowdsaleWhiteListWithCapToken_flat.sol %npm_package_config_contract_folder% %npm_package_config_extension_path% false %npm_package_config_crowdsale_token_contract_name% CrowdsaleWhiteListWithCapToken",
    "compileCrowdsalePricingStrategyContractWin": "node ./scripts/compileContract.js %npm_package_config_contract_folder%/CrowdsaleWhiteListWithCapPricingStrategy_flat.sol %npm_package_config_contract_folder% %npm_package_config_extension_path% false %npm_package_config_crowdsale_pricing_strategy_contract_name% CrowdsaleWhiteListWithCapPricingStrategy",
    "compileCrowdsaleNullFinalizeAgentContractWin": "node ./scripts/compileContract.js %npm_package_config_contract_folder%/NullFinalizeAgent_flat.sol %npm_package_config_contract_folder% %npm_package_config_extension_path% false %npm_package_config_null_finalize_agent_contract_name% NullFinalizeAgent",
    "compileCrowdsaleFinalizeAgentContractWin": "node ./scripts/compileContract.js %npm_package_config_contract_folder%/FinalizeAgent_flat.sol %npm_package_config_contract_folder% %npm_package_config_extension_path% false %npm_package_config_finalize_agent_contract_name% FinalizeAgent",
    "lint": "eslint src",
    "ganache": "ganache-cli -d -i 12648430"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}"
    ],
    "setupFiles": [
      "<rootDir>/config/polyfills.js"
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.js?(x)",
      "<rootDir>/src/**/?(*.)(spec|test).js?(x)"
    ],
    "testEnvironment": "node",
    "testURL": "http://localhost",
    "transform": {
      "^.+\\.(js|jsx)$": "<rootDir>/node_modules/babel-jest",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"
    ],
    "moduleNameMapper": {
      "^react-native$": "react-native-web"
    },
    "moduleFileExtensions": [
      "web.js",
      "js",
      "json",
      "web.jsx",
      "jsx",
      "node"
    ],
    "snapshotSerializers": [
      "enzyme-to-json/serializer"
    ]
  },
  "babel": {
    "presets": [
      "react-app"
    ]
  },
  "eslintConfig": {
    "extends": "react-app"
  }
}
